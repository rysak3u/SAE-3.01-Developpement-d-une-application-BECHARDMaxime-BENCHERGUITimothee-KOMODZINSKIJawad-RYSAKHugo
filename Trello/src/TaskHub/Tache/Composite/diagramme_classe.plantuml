@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class Conteneur {
  + Conteneur(String, ModeleTache): 
  + Conteneur(String, ArrayList<Tache>, ModeleTache): 
  - taches: ArrayList<Tache>
  - titre: String
  + supprimerTache(Tache): void
  + graphique_liste(): ArrayList<VBox>
  + ajouterTache(Tache): void
  + graphique_tableau(): VBox
  + supprimerTache(int): void
   titre: String
   taches: ArrayList<Tache>
}
class ControllerAfficherFormulaire {
  + ControllerAfficherFormulaire(ModeleTache, int): 
  + handle(MouseEvent): void
}
class ControllerCréerTache {
  + ControllerCréerTache(ModeleTache, TextField, TextField): 
  + handle(MouseEvent): void
}
class ModeleTache {
  + ModeleTache(PrincipaleFx): 
  - tableau: Tableau
  - colonneSelectionner: int
  + supprimerObservateur(Observateur): void
  + afficherFormulaire(): void
  + notifierObservateur(): void
  + changerColonneSelectionner(int): void
  + creerTache(String, String): void
  + enregisterObservateur(Observateur): void
  + switchScenePrincipale(): void
   colonneSelectionner: int
   tableau: Tableau
}
interface Observateur << interface >> {
  + actualiser(Sujet): void
}
class SousTache {
  + SousTache(String, String): 
  + ajouterSousTache(Tache): boolean
}
interface Sujet << interface >> {
  + supprimerObservateur(Observateur): void
  + notifierObservateur(): void
  + enregisterObservateur(Observateur): void
}
class Tableau {
  + Tableau(String, ArrayList<Conteneur>): 
  + Tableau(String): 
  - titre: String
  + graphique_tableau(): VBox
  + ajouterConteneur(Conteneur): void
  + getConteneur(int): Conteneur
  + retirerConteneur(Conteneur): void
  + graphique_liste(): VBox
   titre: String
   conteneurs: ArrayList<Conteneur>
}
class Tache {
  + Tache(String, String): 
  - titre: String
  # description: String
  + affichage(): VBox
  + ajouterSousTache(Tache): boolean
   description: String
   titre: String
}
class TacheException {
  + TacheException(String): 
  + TacheException(): 
}
class TacheMere {
  + TacheMere(String, String): 
  + ajouterSousTache(Tache): boolean
}
class TacheNomVideException {
  + TacheNomVideException(String): 
  + TacheNomVideException(): 
}
class VueConteneurs {
  + VueConteneurs(ModeleTache): 
  + actualiser(Sujet): void
}

Conteneur                     -[#595959,dashed]->  ControllerAfficherFormulaire : "«create»"
Conteneur                    "1" *-[#595959,plain]-> "modele\n1" ModeleTache                  
Conteneur                    "1" *-[#595959,plain]-> "taches\n*" Tache                        
ControllerAfficherFormulaire "1" *-[#595959,plain]-> "m\n1" ModeleTache                  
ControllerCréerTache         "1" *-[#595959,plain]-> "m\n1" ModeleTache                  
ModeleTache                  "1" *-[#595959,plain]-> "observateurs\n*" Observateur                  
ModeleTache                   -[#008200,dashed]-^  Sujet                        
ModeleTache                  "1" *-[#595959,plain]-> "tableau\n1" Tableau                      
ModeleTache                   -[#595959,dashed]->  TacheMere                    : "«create»"
SousTache                     -[#000082,plain]-^  Tache                        
Tableau                      "1" *-[#595959,plain]-> "colonnes\n*" Conteneur                    
Tache                         -[#595959,dashed]->  TacheNomVideException        : "«create»"
TacheMere                     -[#000082,plain]-^  Tache                        
TacheMere                    "1" *-[#595959,plain]-> "sousTache\n*" Tache                        
TacheNomVideException         -[#000082,plain]-^  TacheException               
VueConteneurs                "1" *-[#595959,plain]-> "modele\n1" ModeleTache                  
VueConteneurs                 -[#008200,dashed]-^  Observateur                  
@enduml
